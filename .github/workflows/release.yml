name: Build Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v1.0.0)'
        required: true
        type: string

env:
  FLUTTER_VERSION: '3.24.5'

jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Build APK
        run: flutter build apk --release

      - name: Build App Bundle
        run: flutter build appbundle --release

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: build/app/outputs/bundle/release/app-release.aab

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Build iOS
        run: flutter build ios --release --no-codesign

      - name: Create iOS Archive
        run: |
          cd ios
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Release -destination generic/platform=iOS -archivePath Runner.xcarchive archive

      - name: Upload iOS Archive
        uses: actions/upload-artifact@v4
        with:
          name: ios-archive
          path: ios/Runner.xcarchive

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Build Web
        run: flutter build web --release

      - name: Upload Web Build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Build Windows
        run: flutter build windows --release

      - name: Upload Windows Build
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/windows/x64/runner/Release

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Build macOS
        run: flutter build macos --release

      - name: Create macOS DMG
        run: |
          cd build/macos/Build/Products/Release
          hdiutil create -volname "IG Follow Manager" -srcfolder "IG Follow Manager.app" -ov -format UDZO "IG Follow Manager.dmg"

      - name: Upload macOS Build
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: build/macos/Build/Products/Release

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      - name: Build Linux
        run: flutter build linux --release

      - name: Create Linux AppImage
        run: |
          cd build/linux/x64/release/bundle
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          ./appimagetool-x86_64.AppImage . IG-Follow-Manager-x86_64.AppImage

      - name: Upload Linux Build
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build/linux/x64/release/bundle

  create-release:
    name: Create Release
    needs: [build-android, build-ios, build-web, build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: ./artifacts/android

      - name: Download Android AAB
        uses: actions/download-artifact@v4
        with:
          name: android-aab
          path: ./artifacts/android

      - name: Download iOS Archive
        uses: actions/download-artifact@v4
        with:
          name: ios-archive
          path: ./artifacts/ios

      - name: Download Web Build
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: ./artifacts/web

      - name: Download Windows Build
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: ./artifacts/windows

      - name: Download macOS Build
        uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: ./artifacts/macos

      - name: Download Linux Build
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: ./artifacts/linux

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## IG Follow Manager ${{ github.ref_name }}
            
            ### Downloads
            
            **Android:**
            - APK: `igfollowmgr-android.apk`
            - App Bundle: `igfollowmgr-android.aab`
            
            **iOS:**
            - Archive: `igfollowmgr-ios.xcarchive`
            
            **Web:**
            - Web Build: `igfollowmgr-web.zip`
            
            **Desktop:**
            - Windows: `igfollowmgr-windows.zip`
            - macOS: `igfollowmgr-macos.dmg`
            - Linux: `igfollowmgr-linux.AppImage`
            
            ### Installation Instructions
            
            **Android:**
            1. Download the APK file
            2. Enable "Install from unknown sources" in your device settings
            3. Install the APK
            
            **iOS:**
            1. Download the archive file
            2. Open in Xcode
            3. Archive and distribute through App Store Connect
            
            **Web:**
            1. Download and extract the web build
            2. Deploy to your web server
            
            **Desktop:**
            1. Download the appropriate file for your platform
            2. Run the installer or executable
            
            ### Changes
            See the commit history for detailed changes.
          files: |
            ./artifacts/android/app-release.apk
            ./artifacts/android/app-release.aab
            ./artifacts/ios/Runner.xcarchive
            ./artifacts/web/*
            ./artifacts/windows/*
            ./artifacts/macos/*
            ./artifacts/linux/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
